<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Posts on HYJ BLOG</title>
		<link>https://2318454078.github.io/posts/</link>
		<description>Recent content in Posts on HYJ BLOG</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>HYJ@copyright</copyright>
		<lastBuildDate>Sun, 23 Jan 2022 18:08:33 +0800</lastBuildDate>
		<atom:link href="https://2318454078.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>&lt;金融数据分析学习笔记01&gt;概率论、统计学与资产回报率</title>
			<link>https://2318454078.github.io/posts/study_statistics/</link>
			<pubDate>Sun, 23 Jan 2022 18:08:33 +0800</pubDate>
			
			<guid>https://2318454078.github.io/posts/study_statistics/</guid>
			<description>CUHK FTEC5580 金融数据分析 1.概率论 $$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.$$</description>
			<content type="html"><![CDATA[<p>CUHK FTEC5580 金融数据分析</p>
<h2 id="1概率论">1.概率论</h2>
<p><em>$$\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt,.$$</em></p>
]]></content>
		</item>
		
		<item>
			<title>基于区块链、OCR、NLP技术的智能保险合同平台</title>
			<link>https://2318454078.github.io/posts/project_insuracex/</link>
			<pubDate>Sat, 22 Jan 2022 22:20:36 +0800</pubDate>
			
			<guid>https://2318454078.github.io/posts/project_insuracex/</guid>
			<description>CUHK 高级金融基础设施_课程项目 项目代码与数据：GitHub地址 项目文档：[Group Project.pdf](https://github.com/2318454078/Insurance_Blockchain_OCR_GPT2/blob/main/Project Report.pdf) 1.项目架构（Dash） Dash是Python下的一个</description>
			<content type="html"><![CDATA[<p>CUHK 高级金融基础设施_课程项目</p>
<p>项目代码与数据：<a href="https://github.com/2318454078/Insurance_Blockchain_OCR_GPT2">GitHub地址</a></p>
<p>项目文档：[Group Project.pdf](<a href="https://github.com/2318454078/Insurance_Blockchain_OCR_GPT2/blob/main/Project">https://github.com/2318454078/Insurance_Blockchain_OCR_GPT2/blob/main/Project</a> Report.pdf)</p>
<h2 id="1项目架构dash">1.项目架构（Dash）</h2>
<p>Dash是Python下的一个第三方框架，主要用于将数据分析、机器学习类的项目构建为Web项目。</p>
<p>Dash写在Plotly.js和React.js之上，是构建和部署具有定制用户界面的数据应用程序的理想选择。它特别适合于任何与数据打交道的人。</p>
<p>通过几个简单的模式，Dash抽象出了建立具有交互式数据可视化的全栈网络应用程序所需的所有技术和协议。</p>
<p>Dash非常简单，你可以在10分钟内将用户界面与你的代码绑定。</p>
<p>Dash应用程序在Web浏览器中呈现。你可以将你的应用程序部署到虚拟机或Kubernetes集群中，然后通过URL分享它们。由于Dash应用程序是在Web浏览器中查看的，因此Dash本身就是跨平台和移动的。</p>
<p>Dash官方文档:<a href="https://dash.plotly.com/">Dash Documentation &amp; User Guide | Plotly</a></p>
<h2 id="2区块链模块功能解析与代码实现">2.区块链模块功能解析与代码实现</h2>
<h4 id="什么是区块链">什么是区块链？</h4>
<p>比特币（区块链）白皮书：<a href="https://bitcoin.org/files/bitcoin-paper/bitcoin_zh_cn.pdf">bitcoin_zh_cn.pdf</a></p>
<p>区块链，就是由一组包含信息的区块组成的链条。每一个区块大致包含以下三个内容：该区块的哈希值（可以理解成一个区块的&quot;指纹&quot;），上一个区块的哈希值，以及这一个区块里所存储的数据。学过数据结构的同学可能会感觉这和链表非常相似——没错，我一开始也是这么理解的。与链表不同的是，区块的哈希值是在该区块<strong>创建</strong>时，根据这个区块存储的数据信息和上一区块的哈希值一起作为输入生成的。这样一来区块链和链表不同的地方就体现出来了：在区块链里如果任何一个中间区块（block_K）的信息发生了改变，block_K就不再是之前的block_K了（哈希值改变了），又因为下一区块会存储前一区块的哈希值，链中任意区块的变化都能通过简单的哈希值校验来发现。</p>
<p>这样一来，如果要修改存储在某个区块链里的信息，同时确保区块链的完整合理，则需要重新计算该区块后面所有区块的哈希值。因此在区块链中修改的记录都是&quot;有迹可循&quot;的。</p>
<h4 id="共识机制">共识机制</h4>
<p>目前有了区块这种存储结构，拥有这个区块链的本人可以知道区块链里的信息是否有修改，但是如何让别人也能够验证呢？</p>
<p>为什么会有这样的问题？我们可以拿比特币举个栗子：比特币中区块存储的是账本信息（可以理解成很多转账记录，例如A支付给B 10块钱）。由于没有银行这种第三方机构，也没有实体的货币（如纸币），为了让转账生效，方法之一是让尽可能多的人作为见证者去验证这一转账，当这个转账被大多数人验证真实后，A如果想再用同样的10块钱支付给C以换取东西，并且把这笔交易广播给见证者们，见证者们就会提出这笔转账不合理。A的这类行为即为双重支付，这种通过判定足够数量的用户是否达成共识来验证的机制叫做&quot;共识机制&quot;。</p>
<p>回到最初的问题：把交易广播出去以后，如何让别人验证转账呢？比特币是这样实现的：让每个人都拥有一份完整的区块链账本，有人想要修改账本时候，其他人只需要验证修改的账本和自己已有的账本是否一致就可以，只要大多数人投反对票，那么这个账本的修改就会被作废了。</p>
<p>然而即使这样，如果想要篡改记录的攻击者无限制地发送虚假区块给他人验证，也会对整体网络其他帮助验证人（节点）造成资源的浪费。为了解决这一问题，比特币提供的方法是增加区块创建的时间成本、计算成本，这样即使有不怀好意的攻击者，攻击者篡改的成本大大增加，对全网其他的影响也大大减少，这也被称做工作量证明机制（proof of Work）。</p>
<h4 id="工作量证明机制">工作量证明机制</h4>
<p>在比特币中工作量证明是如何实现的呢？</p>
<p>我们知道，哈希算法类似于将一个简单输入值x，通过一个很复杂的函数（散列函数），计算出哈希值y。</p>
<p>如果人类给出一个y，让计算机根据函数反推x，计算机只能通过用一个个不同的x暴力尝试出刚好能计算出y的答案。在散列函数中，这对于计算机来说是个不可能完成的任务。所以为了控制难度，可以给计算机一个合适的答案范围，例如要求计算机通过修改区块里的一个随机数nonce，计算出哈希值，这个哈希值必须以'0000&rsquo;开头。如果这个哈希值是16进制，哈希值里的每一位数数值可以看作是随机的，那么改变一次nonce能够刚好凑出'0000&rsquo;开头的概率就是 ,计算机可能要经过千万次的尝试才能刚好得到符合条件的哈希值。答案范围越小，计算机需要尝试的次数就越多，修改区块链需要的开销就越大。</p>
<p>以下是一个简单的代码实现:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">hashlib</span> <span class="kn">import</span> <span class="n">sha256</span>
<span class="c1"># We want the hash value starts with &#39;00000&#39;</span>
<span class="n">difficulty</span> <span class="o">=</span> <span class="mi">5</span>
<span class="n">answer</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="o">*</span><span class="n">difficulty</span>

<span class="k">def</span> <span class="nf">compute_hash</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">nonce</span><span class="p">):</span>
    <span class="k">return</span> <span class="n">sha256</span><span class="p">((</span><span class="n">data</span><span class="o">+</span><span class="nb">str</span><span class="p">(</span><span class="n">nonce</span><span class="p">))</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>

<span class="n">data</span> <span class="o">=</span> <span class="s1">&#39;123&#39;</span>
<span class="n">nonce</span> <span class="o">=</span> <span class="mi">1</span> <span class="c1"># data to change</span>

<span class="c1"># init hash_value    </span>
<span class="n">hash_value</span> <span class="o">=</span> <span class="n">compute_hash</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">nonce</span><span class="p">)</span>

<span class="c1"># change nonce recursively until hash_value begins with the answer.</span>
<span class="k">while</span> <span class="n">hash_value</span><span class="p">[:</span><span class="n">difficulty</span><span class="p">]</span> <span class="o">!=</span> <span class="n">answer</span><span class="p">:</span>
    <span class="n">nonce</span> <span class="o">+=</span> <span class="mi">1</span> 
    <span class="n">hash_value</span> <span class="o">=</span> <span class="n">compute_hash</span><span class="p">(</span><span class="n">data</span><span class="p">,</span><span class="n">nonce</span><span class="p">)</span>


<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;tryout times:&#39;</span><span class="p">,</span><span class="n">nonce</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;hash_value:&#39;</span><span class="p">,</span><span class="n">hash_value</span><span class="p">)</span>
</code></pre></div><p>输出：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">tryout</span> <span class="n">times</span><span class="p">:</span> <span class="mi">96064</span>
<span class="n">hash_value</span><span class="p">:</span> <span class="mi">00000</span><span class="n">bdebc0a945fcd1a1b6127267393dfc299c89b031b7879d926a32921e9f6</span>
</code></pre></div><p>可以看到，计算机尝试了96064个不同的nonce值才让哈希值的前N位数符合我们的答案。</p>
<p>在比特币区块链中，产生一个区块平均时间在10分钟左右，同时考虑到全网算力的提升，比特币会通过提高难度（减小答案范围）的方式，让目前一个区块产生的平均时间不会因为算力的提升增长，甚至每隔一段时间比特币的产量会减半。</p>
<p>有了这些机制的保护，区块链的篡改几乎成了不可能。此外在许多虚拟货币例如比特币中，还加入了区块奖励机制，即第一位把一个新区块加入到主链上用户会收到一定数量的比特币（目前是12.5枚/区块）。这种奖励机制有助于帮助系统内的节点用户保持&quot;诚实&quot;。即便真的有人拥有足够的算力破坏虚拟货币系统，他手上持有的货币也会因为信用崩塌而失去价值，而如果遵守规则，算力用于计算区块获得区块奖励，他将会获得价值更高的奖励收益。</p>
<h4 id="代码实现简单的区块链加密货币">代码实现简单的区块链（加密货币）</h4>
<p>利用Python实现简单的区块链:</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">from</span> <span class="nn">hashlib</span> <span class="kn">import</span> <span class="n">sha256</span>
<span class="kn">import</span> <span class="nn">time</span>
<span class="kn">import</span> <span class="nn">json</span>
<span class="kn">import</span> <span class="nn">logging</span>
<span class="kn">from</span> <span class="nn">typing</span> <span class="kn">import</span> <span class="n">Dict</span><span class="p">,</span> <span class="n">List</span>
<span class="kn">import</span> <span class="nn">rsa</span>


<span class="c1"># block + chain</span>
<span class="k">class</span> <span class="nc">Block</span><span class="p">():</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">transactions</span><span class="p">:</span> <span class="n">List</span><span class="p">,</span> <span class="n">prev_hash</span><span class="p">):</span>
        <span class="c1"># transaction -&gt; list of objects</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">transactions</span> <span class="o">=</span> <span class="n">transactions</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">prev_hash</span> <span class="o">=</span> <span class="n">prev_hash</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">nonce</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># use for mining</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">timestamp</span> <span class="o">=</span> <span class="n">time</span><span class="o">.</span><span class="n">time</span><span class="p">()</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">compute_hash</span><span class="p">()</span>

    <span class="k">def</span> <span class="fm">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="sa">f</span><span class="s2">&#34;</span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">transactions</span><span class="si">}</span><span class="s2">&#34;</span>

    <span class="k">def</span> <span class="nf">compute_hash</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">block_string</span> <span class="o">=</span> <span class="s2">&#34;</span><span class="si">{}{}{}{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span><span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">transactions</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">prev_hash</span><span class="p">,</span> <span class="nb">str</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">nonce</span><span class="p">),</span> <span class="bp">self</span><span class="o">.</span><span class="n">timestamp</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">sha256</span><span class="p">(</span><span class="n">block_string</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>

    <span class="k">def</span> <span class="nf">validate_transaction</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">for</span> <span class="n">transaction</span> <span class="ow">in</span> <span class="bp">self</span><span class="o">.</span><span class="n">transactions</span><span class="p">:</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">transaction</span><span class="o">.</span><span class="n">is_valid</span><span class="p">():</span>
                <span class="k">return</span> <span class="kc">False</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="k">return</span> <span class="kc">True</span>

    <span class="k">def</span> <span class="nf">mine</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">difficulty</span><span class="p">:</span> <span class="nb">int</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="o">.</span><span class="n">validate_transaction</span><span class="p">():</span>
            <span class="k">raise</span> <span class="ne">Exception</span><span class="p">(</span><span class="s1">&#39;Abnormal transaction found, abort.&#39;</span><span class="p">)</span>

        <span class="n">answer</span> <span class="o">=</span> <span class="s1">&#39;0&#39;</span><span class="o">*</span><span class="n">difficulty</span>

        <span class="k">while</span> <span class="bp">self</span><span class="o">.</span><span class="n">hash</span><span class="p">[:</span><span class="n">difficulty</span><span class="p">]</span> <span class="o">!=</span> <span class="n">answer</span><span class="p">:</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">nonce</span> <span class="o">+=</span> <span class="mi">1</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">hash</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">compute_hash</span><span class="p">()</span>

        <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s1">&#39;Finished mining, tryout times:</span><span class="si">{</span><span class="bp">self</span><span class="o">.</span><span class="n">nonce</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>


<span class="k">class</span> <span class="nc">Transaction</span><span class="p">(</span><span class="n">Dict</span><span class="p">):</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">payer</span><span class="p">,</span> <span class="n">payee</span><span class="p">,</span> <span class="n">amount</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">payer</span><span class="o">=</span><span class="n">payer</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">payee</span><span class="o">=</span><span class="n">payee</span><span class="p">)</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="n">amount</span><span class="o">=</span><span class="n">amount</span><span class="p">)</span>
        <span class="c1"># self.timestamp = timestamp</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">update</span><span class="p">(</span><span class="nb">hash</span><span class="o">=</span><span class="bp">self</span><span class="o">.</span><span class="n">compute_hash</span><span class="p">())</span>

    <span class="k">def</span> <span class="fm">__repr__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="n">json</span><span class="o">.</span><span class="n">dumps</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">sign</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">private_key</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">signature</span> <span class="o">=</span> <span class="n">rsa</span><span class="o">.</span><span class="n">sign_hash</span><span class="p">(</span>
            <span class="n">hash_value</span><span class="o">=</span><span class="bp">self</span><span class="p">[</span><span class="s1">&#39;hash&#39;</span><span class="p">]</span><span class="o">.</span><span class="n">encode</span><span class="p">(</span><span class="s2">&#34;utf-8&#34;</span><span class="p">),</span>
            <span class="n">priv_key</span><span class="o">=</span><span class="n">private_key</span><span class="p">,</span>
            <span class="n">hash_method</span><span class="o">=</span><span class="s1">&#39;SHA-256&#39;</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">is_valid</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="ow">not</span> <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;payer&#39;</span><span class="p">]:</span>
            <span class="k">return</span> <span class="kc">False</span>

        <span class="k">else</span><span class="p">:</span>
            <span class="c1"># 这里由于没有引入数字签名，暂不验证</span>
            <span class="k">return</span> <span class="kc">True</span>

    <span class="k">def</span> <span class="nf">compute_hash</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="n">Transaction_string</span> <span class="o">=</span> <span class="s2">&#34;</span><span class="si">{}{}{}</span><span class="s2">&#34;</span><span class="o">.</span><span class="n">format</span><span class="p">(</span>
            <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;payer&#39;</span><span class="p">],</span> <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;payee&#39;</span><span class="p">],</span> <span class="bp">self</span><span class="p">[</span><span class="s1">&#39;amount&#39;</span><span class="p">])</span>
        <span class="k">return</span> <span class="n">sha256</span><span class="p">(</span><span class="n">Transaction_string</span><span class="o">.</span><span class="n">encode</span><span class="p">())</span><span class="o">.</span><span class="n">hexdigest</span><span class="p">()</span>


<span class="k">class</span> <span class="nc">BlockChain</span><span class="p">():</span>
    <span class="k">def</span> <span class="fm">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">difficulty</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">chain</span> <span class="o">=</span> <span class="p">[</span><span class="bp">self</span><span class="o">.</span><span class="n">create_genesis</span><span class="p">()]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">transactionPool</span> <span class="o">=</span> <span class="p">[]</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">Reward</span> <span class="o">=</span> <span class="mi">1</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">difficulty</span> <span class="o">=</span> <span class="n">difficulty</span>

    <span class="k">def</span> <span class="nf">set_difficulty</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">difficulty</span><span class="p">):</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">difficulty</span> <span class="o">=</span> <span class="n">difficulty</span>

    <span class="k">def</span> <span class="nf">create_genesis</span><span class="p">(</span><span class="bp">self</span><span class="p">)</span> <span class="o">-&gt;</span> <span class="n">Block</span><span class="p">:</span>
        <span class="n">genesis_block</span> <span class="o">=</span> <span class="n">Block</span><span class="p">(</span><span class="n">transactions</span><span class="o">=</span><span class="p">[],</span> <span class="n">prev_hash</span><span class="o">=</span><span class="mi">0</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">genesis_block</span>

    <span class="k">def</span> <span class="nf">get_latest_block</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>

    <span class="k">def</span> <span class="nf">add_block_to_chain</span><span class="p">(</span><span class="bp">self</span><span class="p">,</span> <span class="n">new_block</span><span class="p">:</span> <span class="n">Block</span><span class="p">):</span>
        <span class="k">if</span> <span class="n">new_block</span><span class="o">.</span><span class="n">hash</span><span class="p">[:</span><span class="bp">self</span><span class="o">.</span><span class="n">difficulty</span><span class="p">]</span> <span class="o">==</span> <span class="s1">&#39;0&#39;</span><span class="o">*</span><span class="bp">self</span><span class="o">.</span><span class="n">difficulty</span><span class="p">:</span>
            <span class="n">new_block</span><span class="o">.</span><span class="n">prev_hash</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">get_latest_block</span><span class="p">()</span><span class="o">.</span><span class="n">hash</span>
            <span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">new_block</span><span class="p">)</span>
            <span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34; a new block added to blockchain.&#34;</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="nb">print</span><span class="p">(</span><span class="s1">&#39;block validation failed.&#39;</span><span class="p">)</span>

    <span class="k">def</span> <span class="nf">validate_chain</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="k">if</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="p">)</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="k">return</span> <span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">compute_hash</span><span class="p">()</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">hash</span>

        <span class="c1"># validate block</span>
        <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="p">)):</span>
            <span class="n">block_to_validate</span> <span class="o">=</span> <span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>

            <span class="c1"># validate transactions in block</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="n">block_to_validate</span><span class="o">.</span><span class="n">validate_transaction</span><span class="p">():</span>
                <span class="n">logging</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s1">&#39;Fraud transactions!&#39;</span><span class="p">)</span>
                <span class="k">return</span> <span class="kc">False</span>

            <span class="c1"># validate data in this block hasn&#39;t been tampered</span>
            <span class="k">elif</span> <span class="ow">not</span> <span class="n">block_to_validate</span><span class="o">.</span><span class="n">hash</span> <span class="o">==</span> <span class="n">block_to_validate</span><span class="o">.</span><span class="n">compute_hash</span><span class="p">():</span>
                <span class="n">logging</span><span class="o">.</span><span class="n">error</span><span class="p">(</span>
                    <span class="sa">f</span><span class="s1">&#39;Data has been tampered! </span><span class="se">\n</span><span class="s1"> this hash:</span><span class="si">{</span><span class="n">block_to_validate</span><span class="o">.</span><span class="n">hash</span><span class="si">}</span><span class="s1"> </span><span class="se">\n</span><span class="s1"> computed hash:</span><span class="si">{</span><span class="n">block_to_validate</span><span class="o">.</span><span class="n">compute_hash</span><span class="p">()</span><span class="si">}</span><span class="s1">&#39;</span><span class="p">)</span>
                <span class="k">return</span> <span class="kc">False</span>

            <span class="c1"># validate block.prev_hash == previous block.hash</span>
            <span class="k">elif</span> <span class="ow">not</span> <span class="n">block_to_validate</span><span class="o">.</span><span class="n">prev_hash</span><span class="p">()</span> <span class="o">==</span> <span class="bp">self</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="n">i</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">hash</span><span class="p">:</span>
                <span class="n">logging</span><span class="o">.</span><span class="n">error</span><span class="p">(</span><span class="s1">&#39;Chain broke!&#39;</span><span class="p">)</span>
                <span class="k">return</span> <span class="kc">False</span>

            <span class="k">else</span><span class="p">:</span>
                <span class="k">return</span> <span class="kc">True</span>
    <span class="k">pass</span>
</code></pre></div><p>测试区块链：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="c1"># test</span>
<span class="c1"># 创建区块链，同时生成创始区块</span>
<span class="n">blockchain</span> <span class="o">=</span> <span class="n">BlockChain</span><span class="p">(</span><span class="mi">4</span><span class="p">)</span>

<span class="n">transaction1</span> <span class="o">=</span> <span class="n">Transaction</span><span class="p">(</span><span class="n">payer</span><span class="o">=</span><span class="s1">&#39;Paparazzi&#39;</span><span class="p">,</span> <span class="n">payee</span><span class="o">=</span><span class="s1">&#39;Elephant&#39;</span><span class="p">,</span> <span class="n">amount</span><span class="o">=</span><span class="s1">&#39;666&#39;</span><span class="p">)</span>

<span class="n">transaction2</span> <span class="o">=</span> <span class="n">Transaction</span><span class="p">(</span><span class="n">payer</span><span class="o">=</span><span class="s1">&#39;Elephant&#39;</span><span class="p">,</span> <span class="n">payee</span><span class="o">=</span><span class="s1">&#39;Sylar&#39;</span><span class="p">,</span> <span class="n">amount</span><span class="o">=</span><span class="s1">&#39;100&#39;</span><span class="p">)</span>

<span class="c1"># add one block to chain</span>
<span class="n">block1</span> <span class="o">=</span> <span class="n">Block</span><span class="p">(</span>
    <span class="n">transactions</span><span class="o">=</span><span class="p">[</span><span class="n">transaction1</span><span class="p">],</span>
    <span class="n">prev_hash</span><span class="o">=</span><span class="n">blockchain</span><span class="o">.</span><span class="n">get_latest_block</span><span class="p">()</span><span class="o">.</span><span class="n">hash</span><span class="p">)</span>
<span class="n">block1</span><span class="o">.</span><span class="n">mine</span><span class="p">(</span><span class="n">difficulty</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>
<span class="n">blockchain</span><span class="o">.</span><span class="n">add_block_to_chain</span><span class="p">(</span><span class="n">block1</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;hash of block1: </span><span class="si">{</span><span class="n">block1</span><span class="o">.</span><span class="n">hash</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>

<span class="c1"># add another block to chain</span>
<span class="n">block2</span> <span class="o">=</span> <span class="n">Block</span><span class="p">(</span>
    <span class="n">transactions</span><span class="o">=</span><span class="p">[</span><span class="n">transaction2</span><span class="p">],</span>
    <span class="n">prev_hash</span><span class="o">=</span><span class="n">blockchain</span><span class="o">.</span><span class="n">get_latest_block</span><span class="p">()</span><span class="o">.</span><span class="n">hash</span><span class="p">)</span>
<span class="n">block2</span><span class="o">.</span><span class="n">mine</span><span class="p">(</span><span class="n">difficulty</span><span class="o">=</span><span class="mi">5</span><span class="p">)</span>
<span class="n">blockchain</span><span class="o">.</span><span class="n">add_block_to_chain</span><span class="p">(</span><span class="n">block2</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;hash of block2: </span><span class="si">{</span><span class="n">block1</span><span class="o">.</span><span class="n">hash</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>

<span class="c1"># Output:</span>
<span class="n">Finished</span> <span class="n">mining</span><span class="p">,</span> <span class="n">tryout</span> <span class="n">times</span><span class="p">:</span><span class="mi">222523</span>
 <span class="n">a</span> <span class="n">new</span> <span class="n">block</span> <span class="n">added</span> <span class="n">to</span> <span class="n">blockchain</span><span class="o">.</span>
<span class="nb">hash</span> <span class="n">of</span> <span class="n">block1</span><span class="p">:</span> <span class="mi">0000</span><span class="n">d7f7e1018f498431eefa24faf7ab6b8ec9c42ecf89d1039939f8f74c15d5</span>
<span class="n">Finished</span> <span class="n">mining</span><span class="p">,</span> <span class="n">tryout</span> <span class="n">times</span><span class="p">:</span><span class="mi">1321891</span>
 <span class="n">a</span> <span class="n">new</span> <span class="n">block</span> <span class="n">added</span> <span class="n">to</span> <span class="n">blockchain</span><span class="o">.</span>
<span class="nb">hash</span> <span class="n">of</span> <span class="n">block2</span><span class="p">:</span> <span class="mi">0000018</span><span class="n">c800c81b750dae4785652efc679929177c6fed9b0d268627f038dde1c</span>
</code></pre></div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;previous hash of last block:</span><span class="si">{</span><span class="n">blockchain</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">prev_hash</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="sa">f</span><span class="s2">&#34;hash of second last block:</span><span class="si">{</span><span class="n">blockchain</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">]</span><span class="o">.</span><span class="n">hash</span><span class="si">}</span><span class="s2">&#34;</span><span class="p">)</span>

<span class="c1"># Output:</span>
<span class="n">previous</span> <span class="nb">hash</span> <span class="n">of</span> <span class="n">last</span> <span class="n">block</span><span class="p">:</span><span class="mi">0000</span><span class="n">c245596fd46a0a8b80e8c2f84efb7f19b077a1a61881260f95dc6098d57a</span>
<span class="nb">hash</span> <span class="n">of</span> <span class="n">second</span> <span class="n">last</span> <span class="n">block</span><span class="p">:</span><span class="mi">0000</span><span class="n">c245596fd46a0a8b80e8c2f84efb7f19b077a1a61881260f95dc6098d57a</span>
</code></pre></div><h4 id="基于区块链的医疗诊断与保险购买">基于区块链的医疗诊断与保险购买</h4>
<p>有了上述实现的区块链，我们可以将医生输入的诊断信息会与区块链中前一个区块的哈希值打包在一起，构建一个“交易”，然后通过哈希算法对该区块进行加密并添加到区块链中，并利用该区块链实现保险的购买。通常情况下，区块链将由点对点网络的分布式账本持有。由于时间有限，区块链架构的建立没有分布式账本的支持。分布式账本的支持。</p>
<p>首先，医生对病人进行诊断，医疗记录的 &ldquo;交易 &ldquo;被创建并打包到新的区块。纪录的 &ldquo;交易 &ldquo;被创建并打包到一个新的区块。然后，新的区块会被加密并添加到区块链中。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">update_output</span><span class="p">(</span><span class="n">submit_n_clicks</span><span class="p">,</span> <span class="n">submit_n_clicks_timestamp</span><span class="p">,</span> <span class="n">patient_name</span><span class="p">,</span> <span class="n">patient_id</span><span class="p">,</span> <span class="n">diagnosis</span><span class="p">,</span> <span class="n">date</span><span class="p">):</span>
    <span class="k">if</span> <span class="ow">not</span> <span class="n">submit_n_clicks</span><span class="p">:</span>
        <span class="k">return</span> <span class="s1">&#39;&#39;</span>

    <span class="k">global</span> <span class="n">submit_n_clicks_last</span>
    
    <span class="k">if</span> <span class="n">submit_n_clicks</span> <span class="o">&gt;</span> <span class="n">submit_n_clicks_last</span><span class="p">:</span>

        <span class="n">submit_n_clicks_last</span> <span class="o">+=</span> <span class="mi">1</span>

        <span class="c1"># 导入区块链</span>
        <span class="n">blockchain</span> <span class="o">=</span> <span class="n">load_blockchain</span><span class="p">()</span>

        <span class="c1"># 将数据转译为Hash，保存至区块</span>
        <span class="n">transaction</span> <span class="o">=</span> <span class="n">MedicalRecord</span><span class="p">(</span><span class="n">patient_name</span><span class="o">=</span><span class="n">patient_name</span><span class="p">,</span> <span class="n">patient_id</span><span class="o">=</span><span class="n">patient_id</span><span class="p">,</span> <span class="n">diagnosis</span><span class="o">=</span><span class="n">diagnosis</span><span class="p">,</span> <span class="n">date</span><span class="o">=</span><span class="n">date</span><span class="p">)</span>
        <span class="n">block</span> <span class="o">=</span> <span class="n">Block</span><span class="p">(</span>
            <span class="n">transactions</span><span class="o">=</span><span class="p">[</span><span class="n">transaction</span><span class="p">],</span>
            <span class="n">prev_hash</span><span class="o">=</span><span class="n">blockchain</span><span class="o">.</span><span class="n">get_latest_block</span><span class="p">()</span><span class="o">.</span><span class="n">hash</span><span class="p">)</span>

        <span class="n">block</span><span class="o">.</span><span class="n">mine</span><span class="p">(</span><span class="n">difficulty</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>

        <span class="n">blockchain</span><span class="o">.</span><span class="n">add_block_to_chain</span><span class="p">(</span><span class="n">block</span><span class="p">)</span>

        <span class="c1"># 将区块导入区块链</span>
        <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;bc.txt&#39;</span><span class="p">,</span> <span class="s1">&#39;wb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">f</span><span class="p">:</span>
            <span class="n">pickle</span><span class="o">.</span><span class="n">dump</span><span class="p">(</span><span class="n">blockchain</span><span class="p">,</span> <span class="n">f</span><span class="p">)</span>

        <span class="k">return</span> <span class="sa">f</span><span class="s2">&#34;&#34;&#34;A new block is added to blockchain.
</span><span class="s2">                    Hash of the block:
</span><span class="s2">                    </span><span class="si">{</span><span class="n">blockchain</span><span class="o">.</span><span class="n">chain</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span><span class="o">.</span><span class="n">hash</span><span class="si">}</span><span class="s2">
</span><span class="s2">        &#34;&#34;&#34;</span>

</code></pre></div><p>若病人需要购买保险，病人可以选择与保险公司分享他/她存储在区块链上的医疗记录，以验证他的健康状况。</p>
<h2 id="3ocr功能模块解析与代码实现">3.OCR功能模块解析与代码实现</h2>
<h4 id="什么是ocr">什么是OCR</h4>
<p>OCR （Optical Character Recognition，光学字符识别）是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，通过检测暗、亮的模式确定其形状，然后用字符识别方法将形状翻译成计算机文字的过程；即，针对印刷体字符，采用光学的方式将纸质文档中的文字转换成为黑白点阵的图像文件，并通过识别软件将图像中的文字转换成文本格式。</p>
<h4 id="基于ocr的保单识别">基于OCR的保单识别</h4>
<p>本项目采用的是百度云的OCR方案。在百度云中注册账户，开通保险单识别功能接口，采用向API服务地址使用POST发送请求的方式进行调用。</p>
<p>用户上传保险单文件（电子版、手写版、拍照版均可），系统接收返回的保险单识别数据并展示在页面上。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">parse_contents</span><span class="p">(</span><span class="n">contents</span><span class="p">,</span> <span class="n">filename</span><span class="p">,</span> <span class="n">date</span><span class="p">):</span>
    <span class="k">try</span><span class="p">:</span>
        <span class="k">if</span> <span class="s1">&#39;jpg&#39;</span> <span class="ow">in</span> <span class="n">filename</span> <span class="ow">or</span> <span class="s1">&#39;jpeg&#39;</span> <span class="ow">in</span> <span class="n">filename</span> <span class="ow">or</span> <span class="s1">&#39;png&#39;</span> <span class="ow">in</span> <span class="n">filename</span> <span class="ow">or</span> <span class="s1">&#39;bmp&#39;</span> <span class="ow">in</span> <span class="n">filename</span><span class="p">:</span>
            <span class="c1"># 解析PDF文件内容</span>
            <span class="n">content_type</span><span class="p">,</span> <span class="n">content_string</span> <span class="o">=</span> <span class="n">contents</span><span class="o">.</span><span class="n">split</span><span class="p">(</span><span class="s1">&#39;,&#39;</span><span class="p">)</span>
            <span class="n">filedata</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64decode</span><span class="p">(</span><span class="n">content_string</span><span class="p">)</span>
            <span class="k">with</span> <span class="nb">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="s1">&#39;wb&#39;</span><span class="p">)</span> <span class="k">as</span> <span class="n">out_file</span><span class="p">:</span>
                <span class="n">out_file</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">filedata</span><span class="p">)</span>
            <span class="n">request_url</span> <span class="o">=</span> <span class="s2">&#34;https://aip.baidubce.com/rest/2.0/ocr/v1/insurance_documents&#34;</span>
            <span class="c1"># 二进制方式打开图片文件</span>
            <span class="n">f</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="n">filepath</span><span class="p">,</span> <span class="s1">&#39;rb&#39;</span><span class="p">)</span>
            <span class="n">image</span> <span class="o">=</span> <span class="n">base64</span><span class="o">.</span><span class="n">b64encode</span><span class="p">(</span><span class="n">f</span><span class="o">.</span><span class="n">read</span><span class="p">())</span>
            <span class="n">host</span> <span class="o">=</span> <span class="s1">&#39;https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=GGj6SdRY7FhrGZPYkpLouwEi&amp;client_secret=q9W3bKfG8oPlqjT1NX0WGKdQmbIIPH9e&#39;</span>
            <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="n">host</span><span class="p">)</span>
            <span class="n">params</span> <span class="o">=</span> <span class="p">{</span><span class="s2">&#34;image&#34;</span><span class="p">:</span> <span class="n">image</span><span class="p">}</span>
            <span class="n">access_token_json</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()</span>
            <span class="n">access_token</span> <span class="o">=</span> <span class="n">access_token_json</span><span class="p">[</span><span class="s2">&#34;access_token&#34;</span><span class="p">]</span>
            <span class="n">request_url</span> <span class="o">=</span> <span class="n">request_url</span> <span class="o">+</span> <span class="s2">&#34;?access_token=&#34;</span> <span class="o">+</span> <span class="n">access_token</span>
            <span class="n">headers</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;content-type&#39;</span><span class="p">:</span> <span class="s1">&#39;application/x-www-form-urlencoded&#39;</span><span class="p">}</span>
            <span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">post</span><span class="p">(</span><span class="n">request_url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">params</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>
            <span class="c1"># 保存OCR数据</span>
            <span class="k">if</span> <span class="n">response</span><span class="p">:</span>
                <span class="n">result_data</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="n">json</span><span class="p">()[</span><span class="s1">&#39;words_result&#39;</span><span class="p">]</span>
                <span class="k">global</span> <span class="n">result_company</span>
                <span class="k">global</span> <span class="n">result_InsBilNo</span>
                <span class="k">global</span> <span class="n">result_InsBilTim</span>
                <span class="k">global</span> <span class="n">result_InsTolAmt</span>
                <span class="k">global</span> <span class="n">result_InsCltNa1</span>
                <span class="k">global</span> <span class="n">result_InsIdcNb1</span>
                <span class="k">global</span> <span class="n">result_InsIdcTy1</span>
                <span class="k">global</span> <span class="n">result_InsCltNa2</span>
                <span class="k">global</span> <span class="n">result_InsIdcNb2</span>
                <span class="k">global</span> <span class="n">result_InsBthDa2</span>
                <span class="k">global</span> <span class="n">result_InsIdcTy2</span>
                <span class="k">global</span> <span class="n">result_InsCovDur</span>
                <span class="k">global</span> <span class="n">result_InsIcvAmt</span>
                <span class="k">global</span> <span class="n">result_InsPayDur</span>
                <span class="k">global</span> <span class="n">result_InsPayFeq</span>
                <span class="k">global</span> <span class="n">result_InsPerAmt</span>
                <span class="k">global</span> <span class="n">result_InsPrdNam</span>
                <span class="k">global</span> <span class="n">result_BenCltNa</span>
                <span class="n">result_company</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsBilCom&#39;</span><span class="p">)</span>
                <span class="n">result_InsBilNo</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsBilNo&#39;</span><span class="p">)</span>
                <span class="n">result_InsBilTim</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsBilTim&#39;</span><span class="p">)</span>
                <span class="n">result_InsTolAmt</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsTolAmt&#39;</span><span class="p">)</span>
                <span class="n">result_InsCltNa1</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsCltNa1&#39;</span><span class="p">)</span>
                <span class="n">result_InsIdcNb1</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsIdcNb1&#39;</span><span class="p">)</span>
                <span class="n">result_InsIdcTy1</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsIdcTy1&#39;</span><span class="p">)</span>
                <span class="n">result_InsCltNa2</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPerLst&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsCltNa2&#39;</span><span class="p">)</span>
                <span class="n">result_InsIdcNb2</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPerLst&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsCltNb2&#39;</span><span class="p">)</span>
                <span class="n">result_InsBthDa2</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPerLst&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsBthDa2&#39;</span><span class="p">)</span>
                <span class="n">result_InsIdcTy2</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPerLst&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsIdcTy2&#39;</span><span class="p">)</span>
                <span class="n">result_InsCovDur</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPrdList&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsCovDur&#39;</span><span class="p">)</span>
                <span class="n">result_InsIcvAmt</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPrdList&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsIcvAmt&#39;</span><span class="p">)</span>
                <span class="n">result_InsPayDur</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPrdList&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPayDur&#39;</span><span class="p">)</span>
                <span class="n">result_InsPayFeq</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPrdList&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPayFeq&#39;</span><span class="p">)</span>
                <span class="n">result_InsPerAmt</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPrdList&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPerAmt&#39;</span><span class="p">)</span>
                <span class="n">result_InsPrdNam</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPrdList&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;InsPrdNam&#39;</span><span class="p">)</span>
                <span class="n">result_BenCltNa</span> <span class="o">=</span> <span class="n">result_data</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;BenPerLst&#39;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">.</span><span class="n">get</span><span class="p">(</span><span class="s1">&#39;BenCltNa&#39;</span><span class="p">)</span>

                <span class="c1"># 根据提取内容制作表格，返回值为html.table</span>
                <span class="n">row1</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Company Name&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_company</span><span class="p">)])</span>
                <span class="n">row2</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Insurance policy number&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsBilNo</span><span class="p">)])</span>
                <span class="n">row3</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Insured amount&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsTolAmt</span><span class="p">)])</span>
                <span class="n">row4</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Policyholder&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsCltNa1</span><span class="p">)])</span>
                <span class="n">row5</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Effective date of the policy&#34;</span><span class="p">),</span>
                                <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsBilTim</span><span class="p">)])</span>
                <span class="n">row6</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;ID number of the Policyholder&#34;</span><span class="p">),</span>
                                <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsIdcNb1</span><span class="p">)])</span>
                <span class="n">row7</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Type of Policyholder&#39;s Document&#34;</span><span class="p">),</span>
                                <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsIdcTy1</span><span class="p">)])</span>

                <span class="n">row8</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;The insured&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsCltNa2</span><span class="p">)])</span>
                <span class="n">row9</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;ID number of the insured&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsIdcNb2</span><span class="p">)])</span>
                <span class="n">row9_1</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Date of Birth of the Insured&#34;</span><span class="p">),</span>
                                  <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsBthDa2</span><span class="p">)])</span>
                <span class="n">row9_2</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Type of Insured&#39;s Document&#34;</span><span class="p">),</span>
                                  <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsIdcTy2</span><span class="p">)])</span>

                <span class="n">row10</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Insurance period&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsCovDur</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;word-break&#34;</span><span class="p">:</span> <span class="s2">&#34;break-all&#34;</span><span class="p">})])</span>
                <span class="n">row11</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Basic insurance amount&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsIcvAmt</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;word-break&#34;</span><span class="p">:</span> <span class="s2">&#34;break-all&#34;</span><span class="p">})])</span>
                <span class="n">row12</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Payment period&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsPayDur</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;word-break&#34;</span><span class="p">:</span> <span class="s2">&#34;break-all&#34;</span><span class="p">})])</span>
                <span class="n">row13</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Frequency of payment&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsPayFeq</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;word-break&#34;</span><span class="p">:</span> <span class="s2">&#34;break-all&#34;</span><span class="p">})])</span>
                <span class="n">row14</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Amount of payment per period&#34;</span><span class="p">),</span>
                                 <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsPerAmt</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;word-break&#34;</span><span class="p">:</span> <span class="s2">&#34;break-all&#34;</span><span class="p">})])</span>
                <span class="n">row15</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">([</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Product name&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_InsPrdNam</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;word-break&#34;</span><span class="p">:</span> <span class="s2">&#34;break-all&#34;</span><span class="p">})])</span>

                <span class="n">row16</span> <span class="o">=</span> <span class="n">html</span><span class="o">.</span><span class="n">Tr</span><span class="p">(</span>
                    <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="s2">&#34;Beneficiary&#39;s name&#34;</span><span class="p">),</span> <span class="n">html</span><span class="o">.</span><span class="n">Td</span><span class="p">(</span><span class="n">result_BenCltNa</span><span class="p">,</span> <span class="n">style</span><span class="o">=</span><span class="p">{</span><span class="s2">&#34;word-break&#34;</span><span class="p">:</span> <span class="s2">&#34;break-all&#34;</span><span class="p">})])</span>

                <span class="n">table_body1</span> <span class="o">=</span> <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Tbody</span><span class="p">([</span><span class="n">row1</span><span class="p">,</span> <span class="n">row2</span><span class="p">,</span> <span class="n">row3</span><span class="p">,</span> <span class="n">row4</span><span class="p">,</span> <span class="n">row5</span><span class="p">,</span> <span class="n">row6</span><span class="p">,</span> <span class="n">row7</span><span class="p">])]</span>
                <span class="n">table1</span> <span class="o">=</span> <span class="n">dbc</span><span class="o">.</span><span class="n">Table</span><span class="p">(</span><span class="n">table_body1</span><span class="p">,</span> <span class="n">bordered</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

                <span class="n">table_body2</span> <span class="o">=</span> <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Tbody</span><span class="p">([</span><span class="n">row8</span><span class="p">,</span> <span class="n">row9</span><span class="p">,</span> <span class="n">row9_1</span><span class="p">,</span> <span class="n">row9_2</span><span class="p">])]</span>
                <span class="n">table2</span> <span class="o">=</span> <span class="n">dbc</span><span class="o">.</span><span class="n">Table</span><span class="p">(</span><span class="n">table_body2</span><span class="p">,</span> <span class="n">bordered</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

                <span class="n">table_body3</span> <span class="o">=</span> <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Tbody</span><span class="p">([</span><span class="n">row15</span><span class="p">,</span> <span class="n">row10</span><span class="p">,</span> <span class="n">row11</span><span class="p">,</span> <span class="n">row12</span><span class="p">,</span> <span class="n">row13</span><span class="p">,</span> <span class="n">row14</span><span class="p">])]</span>
                <span class="n">table3</span> <span class="o">=</span> <span class="n">dbc</span><span class="o">.</span><span class="n">Table</span><span class="p">(</span><span class="n">table_body3</span><span class="p">,</span> <span class="n">bordered</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

                <span class="n">table_body4</span> <span class="o">=</span> <span class="p">[</span><span class="n">html</span><span class="o">.</span><span class="n">Tbody</span><span class="p">([</span><span class="n">row16</span><span class="p">])]</span>
                <span class="n">table4</span> <span class="o">=</span> <span class="n">dbc</span><span class="o">.</span><span class="n">Table</span><span class="p">(</span><span class="n">table_body4</span><span class="p">,</span> <span class="n">bordered</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="k">return</span> <span class="n">html</span><span class="o">.</span><span class="n">Div</span><span class="p">([</span>
                <span class="n">dbc</span><span class="o">.</span><span class="n">Alert</span><span class="p">(</span><span class="s2">&#34;Please upload pictures in jpg/jpeg/png/bmp format&#34;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s2">&#34;danger&#34;</span><span class="p">)</span>
            <span class="p">])</span>
    <span class="k">except</span> <span class="ne">Exception</span> <span class="k">as</span> <span class="n">e</span><span class="p">:</span>
        <span class="nb">print</span><span class="p">(</span><span class="n">e</span><span class="p">)</span>
        <span class="k">return</span> <span class="n">html</span><span class="o">.</span><span class="n">Div</span><span class="p">([</span>
            <span class="n">dbc</span><span class="o">.</span><span class="n">Alert</span><span class="p">(</span><span class="s1">&#39;There was an error processing this file.&#39;</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="s2">&#34;danger&#34;</span><span class="p">)</span>
        <span class="p">])</span>

    <span class="k">return</span> <span class="n">html</span><span class="o">.</span><span class="n">Div</span><span class="p">([</span>
        <span class="n">html</span><span class="o">.</span><span class="n">H2</span><span class="p">(</span><span class="s1">&#39;basic information&#39;</span><span class="p">),</span>
        <span class="n">html</span><span class="o">.</span><span class="n">Hr</span><span class="p">(),</span>
        <span class="n">table1</span><span class="p">,</span>
        <span class="n">html</span><span class="o">.</span><span class="n">H2</span><span class="p">(</span><span class="s1">&#39;Insured Information&#39;</span><span class="p">),</span>
        <span class="n">html</span><span class="o">.</span><span class="n">Hr</span><span class="p">(),</span>
        <span class="n">table2</span><span class="p">,</span>
        <span class="n">html</span><span class="o">.</span><span class="n">H2</span><span class="p">(</span><span class="s1">&#39;Insurance information&#39;</span><span class="p">),</span>
        <span class="n">html</span><span class="o">.</span><span class="n">Hr</span><span class="p">(),</span>
        <span class="n">table3</span><span class="p">,</span>
        <span class="n">html</span><span class="o">.</span><span class="n">H2</span><span class="p">(</span><span class="s1">&#39;Beneficiary information&#39;</span><span class="p">),</span>
        <span class="n">html</span><span class="o">.</span><span class="n">Hr</span><span class="p">(),</span>
        <span class="n">table4</span><span class="p">,</span>
    <span class="p">]</span>
    <span class="p">)</span>
</code></pre></div><p>之后，用户可以选择存储保单识别后的信息到数据库中，便于保单管理。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="k">def</span> <span class="nf">store</span><span class="p">(</span><span class="n">n_clicks_store</span><span class="p">):</span>
    <span class="k">global</span> <span class="n">username</span>
    <span class="k">if</span> <span class="n">n_clicks_store</span> <span class="ow">and</span> <span class="n">n_clicks_store</span> <span class="o">&gt;</span> <span class="mi">0</span><span class="p">:</span>
        <span class="k">if</span> <span class="n">current_user</span><span class="o">.</span><span class="n">is_authenticated</span><span class="p">:</span>
            <span class="n">username</span> <span class="o">=</span> <span class="n">current_user</span><span class="o">.</span><span class="n">username</span>
        <span class="n">f_out</span> <span class="o">=</span> <span class="nb">open</span><span class="p">(</span><span class="s1">&#39;./&#39;</span><span class="o">+</span><span class="n">username</span><span class="o">+</span><span class="s1">&#39;_policy.csv&#39;</span><span class="p">,</span> <span class="s1">&#39;a+&#39;</span><span class="p">,</span> <span class="n">encoding</span><span class="o">=</span><span class="s1">&#39;utf-8-sig&#39;</span><span class="p">)</span>
        <span class="n">csv_writer</span> <span class="o">=</span> <span class="n">csv</span><span class="o">.</span><span class="n">writer</span><span class="p">(</span><span class="n">f_out</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">os</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">getsize</span><span class="p">(</span><span class="s1">&#39;./&#39;</span><span class="o">+</span><span class="n">username</span><span class="o">+</span><span class="s1">&#39;_policy.csv&#39;</span><span class="p">):</span>
            <span class="n">csv_writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">([</span><span class="n">username</span><span class="p">,</span> <span class="n">result_company</span><span class="p">,</span> <span class="n">result_InsBilNo</span><span class="p">,</span> <span class="n">result_InsTolAmt</span><span class="p">,</span> <span class="n">result_InsCltNa1</span><span class="p">,</span> <span class="n">result_InsBilTim</span><span class="p">,</span>
                                 <span class="n">result_InsIdcNb1</span><span class="p">,</span> <span class="n">result_InsIdcTy1</span><span class="p">,</span> <span class="n">result_InsCltNa2</span><span class="p">,</span> <span class="n">result_InsIdcNb2</span><span class="p">,</span>
                                 <span class="n">result_InsBthDa2</span><span class="p">,</span> <span class="n">result_InsIdcTy2</span><span class="p">,</span> <span class="n">result_InsCovDur</span><span class="p">,</span> <span class="n">result_InsIcvAmt</span><span class="p">,</span>
                                 <span class="n">result_InsPayDur</span><span class="p">,</span> <span class="n">result_InsPayFeq</span><span class="p">,</span> <span class="n">result_InsPerAmt</span><span class="p">,</span> <span class="n">result_InsPrdNam</span><span class="p">,</span>
                                 <span class="n">result_BenCltNa</span><span class="p">])</span>
        <span class="k">else</span><span class="p">:</span>
            <span class="n">csv_writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">([</span><span class="s2">&#34;username&#34;</span><span class="p">,</span> <span class="s2">&#34;Company Name&#34;</span><span class="p">,</span> <span class="s2">&#34;Insurance policy number&#34;</span><span class="p">,</span> <span class="s2">&#34;Insured amount&#34;</span><span class="p">,</span> <span class="s1">&#39;Policyholder&#39;</span><span class="p">,</span> <span class="s1">&#39;Effective date of the policy&#39;</span> <span class="p">,</span><span class="s1">&#39;ID number of the Policyholder &#39;</span><span class="p">,</span> <span class="s1">&#39;Type of Policyholder</span><span class="se">\&#39;</span><span class="s1">s Document&#39;</span><span class="p">,</span> <span class="s1">&#39;The insured&#39;</span><span class="p">,</span> <span class="s1">&#39;ID number of the insured&#39;</span><span class="p">,</span> <span class="s1">&#39;Date of Birth of the Insured&#39;</span><span class="p">,</span> <span class="s1">&#39;Type of Insured</span><span class="se">\&#39;</span><span class="s1">s Document&#39;</span><span class="p">,</span> <span class="s1">&#39;Insurance period&#39;</span><span class="p">,</span> <span class="s1">&#39;Basic insurance amount&#39;</span><span class="p">,</span> <span class="s1">&#39;Payment period&#39;</span><span class="p">,</span> <span class="s1">&#39;Frequency of payment&#39;</span><span class="p">,</span> <span class="s1">&#39;Amount of payment per period&#39;</span><span class="p">,</span> <span class="s1">&#39;Product name&#39;</span><span class="p">,</span> <span class="s1">&#39;Beneficiary</span><span class="se">\&#39;</span><span class="s1">s name&#39;</span><span class="p">])</span>
            <span class="n">csv_writer</span><span class="o">.</span><span class="n">writerow</span><span class="p">([</span><span class="n">username</span><span class="p">,</span> <span class="n">result_company</span><span class="p">,</span> <span class="n">result_InsBilNo</span><span class="p">,</span> <span class="n">result_InsTolAmt</span><span class="p">,</span> <span class="n">result_InsCltNa1</span><span class="p">,</span> <span class="n">result_InsBilTim</span><span class="p">,</span>
                                 <span class="n">result_InsIdcNb1</span><span class="p">,</span> <span class="n">result_InsIdcTy1</span><span class="p">,</span> <span class="n">result_InsCltNa2</span><span class="p">,</span> <span class="n">result_InsIdcNb2</span><span class="p">,</span>
                                 <span class="n">result_InsBthDa2</span><span class="p">,</span> <span class="n">result_InsIdcTy2</span><span class="p">,</span> <span class="n">result_InsCovDur</span><span class="p">,</span> <span class="n">result_InsIcvAmt</span><span class="p">,</span>
                                 <span class="n">result_InsPayDur</span><span class="p">,</span> <span class="n">result_InsPayFeq</span><span class="p">,</span> <span class="n">result_InsPerAmt</span><span class="p">,</span> <span class="n">result_InsPrdNam</span><span class="p">,</span>
                                 <span class="n">result_BenCltNa</span><span class="p">])</span>

        <span class="c1"># 返回OK</span>
        <span class="k">return</span> <span class="s1">&#39;&#39;</span>
</code></pre></div><h2 id="4nlp模块功能解析与代码实现">4.NLP模块功能解析与代码实现</h2>
<p>该模块为另一位同学负责开发，我不是很熟悉，就不详细解释了，具体信息在代码库和文档中。</p>
]]></content>
		</item>
		
		<item>
			<title>基于CAPM的风险收益一致性择时模型（Python实现）</title>
			<link>https://2318454078.github.io/posts/project_capmtimeselection/</link>
			<pubDate>Sat, 22 Jan 2022 14:39:24 +0800</pubDate>
			
			<guid>https://2318454078.github.io/posts/project_capmtimeselection/</guid>
			<description>CUHK 金融市场与机构_课程项目 本文模型复现来源于华泰金工风险收益一致性择时模型研究报告 项目代码与数据：GitHub地址 项目文档：Group Project.pdf 1.</description>
			<content type="html"><![CDATA[<p>CUHK 金融市场与机构_课程项目</p>
<p>本文模型复现来源于<a href="https://crm.htsc.com.cn/doc/2017/10750101/ddc7f963-1a6d-461e-9496-e6c6bf23e99f.pdf">华泰金工风险收益一致性择时模型研究报告</a></p>
<p>项目代码与数据：<a href="https://github.com/2318454078/CAPM-TIMING-MODEL">GitHub地址</a></p>
<p>项目文档：<a href="https://github.com/2318454078/CAPM-TIMING-MODEL/blob/main/Report_Group4.pdf">Group Project.pdf</a></p>
<h2 id="1模型介绍">1.模型介绍</h2>
<p>自从20 世纪50 年代资本资产定价模型提出之后，人们习惯使用贝塔来代表资产与市场组合之间的关系。根据资本资产定价模型，假设资产的贝塔值是稳定的，那么在市场上涨的时候，贝塔高的资产应该收获更高的收益，但是市场下跌的时候也会承担更多的损失，所以贝塔值代表了资产承担市场风险的大小。通过资本资产定价模型我们找到了市场中存在的一种结构，不同资产的涨跌幅与市场组合的涨跌幅会存在相对固定的对应关系。如果反过来使用这种对应关系，就得到了一种观察市场的方法，比如当发现高贝塔的资产收益较高，低贝塔的资产收益较低时，那市场大概率处于一种上升状态，当发现高贝塔的资产收益较低，低贝塔的资产收益较高时，市场可能处于一种下跌状态，如此我们可以构造一个择时模型。</p>
<p><strong>资本资产定价模型 (Capital Asset Pricing Model, CAPM)</strong> 是基于风险资产期望收益均衡基础上的预测模型，它起源于马科维茨 (Markowitz, 1952) 提出的现代投资组合理论(Modern Portfolio Theory, MPT) 。在这一理论的基础上，夏普(W. Sharpe，1964)，林特纳(J. Lintner, 1965)和莫辛(J. Mossin, 1966)等经济学家通过假设投资者均采用马科维茨模型进行投资行为从而达到市场均衡，推导出单个资产或资产组合的预期收益率公式如下：</p>
<p><strong>𝐸(𝑅𝑝 ) = 𝑅𝑓 + 𝛽𝑝 (𝑅𝑚 − 𝑅𝑓 )</strong></p>
<p>贝塔是CAPM 模型中的一个重要概念。贝塔是一项资产或投资组合对市场投资组合方差的贡献程度，也即该资产或组合相对于市场波动性的敏感程度。贝塔越高，表明该资产或组合受市场波动的影响越大，从而带来更大的风险溢价（即𝛽𝑝 (𝑅𝑚 − 𝑅𝑓)，括号内的部分为市场风险溢价）。在市场上涨（或下跌）时，高贝塔的资产由于承担了更多的市场风险，其收益的变动会比低贝塔的资产更为剧烈。</p>
<p>在资本资产定价模型的收益率公式中，如果贝塔是固定的，那资本的收益率主要取决于市场的收益率，所以市场上涨高贝塔行业涨幅更大，市场下跌同样高贝塔行业会下跌更多。借助于这一点，可以尝试逆向推断市场的涨跌，当行业涨幅与其贝塔状态基本一致的时候，说明市场是上涨的，相反的时候说明市场是下跌的。</p>
<h2 id="2策略简介">2.策略简介</h2>
<p>利用行业的贝塔与其收益率之间的关系构建择时模型，由于贝塔代表行业相比于市场组合的风险承担，本质上也代表行业相对于市场组合的杠杆率，一定程度上度量了风险，所以将择时模型起名为风险收益一致性择时模型。</p>
<p>如前所述，资产的贝塔大小与资产收益变动幅度存在相关性，而各个行业具有特征明显且相对稳定的贝塔。基于这一性质，我们可以对行业的贝塔与收益进行观测，进而对判断市场的运行状况：</p>
<ol>
<li>当贝塔与收益趋于一致，即高贝塔的行业收益更高时，认为市场表现良好，观点看多；</li>
<li>当贝塔与收益呈反向关系，即高贝塔的行业收益更低时，认为市场表现不佳，观点看空。这一策略有着清晰的逻辑，并且以行业与市场指数做比较，在长期看较为稳定，适合对市场进行长期判断。为了度量行业贝塔与收益的一致性，我们引入Spearman 秩相关系数
作为工具。</li>
</ol>
<p><strong>Spearman 秩相关系数</strong>是非参数统计方法中常用的一种相关性统计量。它衡量的是两组变量之间的等级（秩）相关程度。其计算方法如下：对需要研究的两组变量 (𝑋, 𝑌) 中的数据 (𝑥 𝑖 , 𝑦𝑖 ) 按由大到小进行排序，记排序后的位置（秩次）为 𝑥′𝑖 , 𝑦′𝑖 ，则观测 𝑖 的秩次差为 𝑑𝑖 = 𝑥′𝑖 − 𝑦′𝑖 。Spearman 秩相关系数为：</p>
<p><strong>𝜌𝑠 = 1 −6 Σ 𝑑𝑖2/𝑛(𝑛2 − 1)</strong></p>
<p>𝜌𝑠 的取值为[−1, 1]。秩相关系数的绝对值越大，表明正／负相关性越强。相比另一种常用方法 Kendall 秩相关系数，Spearman 的优点在于计算出的系数差异更明显，避免了每期系数差距过小，造成参数过于敏感，不利于进行判断。下图是行业的贝塔值与万得全A周收益率的Spearman 相关系数，随着市场的变化衡量了市场的一致性变动。我们利用行业的贝塔、收益率与Spearman 秩相关系数，尝试建立择时策略。</p>
<p>以每周5 个交易日，每月4 个交易周为假设，我们以万得全A 为市场指数，分别计算中信一级行业指数的29 个行业两年左右（96~104 周）的贝塔，在每周末得到贝塔数据 𝛽𝑡 =[𝛽𝑡,𝑖1 𝛽𝑡,𝑖2 … 𝛽𝑡,𝑖29 ]。</p>
<p>得到贝塔后，我们对29 个行业每周的收益率 𝑟𝑡 = [𝑟𝑡 ,𝑖1 𝑟𝑡 ,𝑖2 ⋯ 𝑟𝑡 ,𝑖29 ] 和贝塔计算Spearman 秩相关系数 𝜌𝑠,𝑡 。在计算时，我们假设行业贝塔在周中保持静态不变，采用29个行业当周的收益率 𝑟𝑡 与上周的贝塔 𝛽𝑡−1 进行计算。这样的好处是贝塔中并没有包含本周的收益率信息，两者保持一定意义上的相对独立，防止某个异常值带来的贝塔偏离。为了过滤相关系数中的噪音，得到更稳定的长周期择时信号，我们对秩相关系数取4 周的滑动平均，得到滑动平均序列 𝜌̅𝑠。</p>
<p>通过对样本内的计算与优化，选取98 周数据计算贝塔，秩相关系数选取0.128 作为阈值，当 𝜌̅𝑠 ≥ 0.128时，记作一次看多，当𝜌̅𝑠 ≤ −0.128时，记作一次看空。在连续两次观测到同向信号时，正式看多／看空指数，发生看多/看空指令；当观测到反向信号时，清空之前
观测，以最近一次观测的方向为基准。</p>
<h2 id="3代码实现python">3.代码实现（Python）</h2>
<p>时间序列数据预处理，用到的数据包括中信行业指数、Wind全A指数，沪深300指数，并将其按照时间序列整体合并存储为ndarray对象</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">pandas</span> <span class="k">as</span> <span class="nn">pd</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>

<span class="n">zhongxin</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;中信行业指数一级行业(日).xlsx&#39;</span><span class="p">)</span>
<span class="n">zhongxindate</span> <span class="o">=</span> <span class="n">zhongxin</span><span class="p">[</span><span class="s1">&#39;时间&#39;</span><span class="p">]</span>
<span class="n">zhongxinarray</span> <span class="o">=</span> <span class="n">zhongxin</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">:,</span><span class="mi">1</span><span class="p">:]</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">()</span>

<span class="n">windweek</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;WindA.xlsx&#39;</span><span class="p">)</span>
<span class="n">weekarray</span> <span class="o">=</span> <span class="n">windweek</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">:,</span><span class="mi">1</span><span class="p">:]</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">()</span>
<span class="n">weekdate</span> <span class="o">=</span> <span class="n">windweek</span><span class="p">[</span><span class="s1">&#39;日期&#39;</span><span class="p">]</span>

<span class="n">hsweek</span> <span class="o">=</span> <span class="n">pd</span><span class="o">.</span><span class="n">read_excel</span><span class="p">(</span><span class="s1">&#39;hs300.xlsx&#39;</span><span class="p">)</span>
<span class="n">hsarray</span> <span class="o">=</span> <span class="n">hsweek</span><span class="o">.</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">:,</span><span class="mi">3</span><span class="p">:]</span><span class="o">.</span><span class="n">to_numpy</span><span class="p">()</span>
<span class="n">hsdate</span> <span class="o">=</span> <span class="n">hsweek</span><span class="p">[</span><span class="s1">&#39;日期&#39;</span><span class="p">]</span>

<span class="n">ptr0</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">ptr1</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">ptr2</span> <span class="o">=</span> <span class="mi">0</span>
<span class="n">datelist</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">ptr0list</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">ptr1list</span> <span class="o">=</span> <span class="p">[]</span>
<span class="n">ptr2list</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">ptr0</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">weekdate</span><span class="p">)):</span>
    <span class="k">while</span><span class="p">(</span><span class="n">hsdate</span><span class="p">[</span><span class="n">ptr1</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">weekdate</span><span class="p">[</span><span class="n">ptr0</span><span class="p">]):</span>
        <span class="n">ptr1</span> <span class="o">=</span> <span class="n">ptr1</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="k">while</span><span class="p">(</span><span class="n">zhongxindate</span><span class="p">[</span><span class="n">ptr2</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">weekdate</span><span class="p">[</span><span class="n">ptr0</span><span class="p">]):</span>
        <span class="n">ptr2</span> <span class="o">=</span> <span class="n">ptr2</span> <span class="o">+</span> <span class="mi">1</span>
    <span class="k">if</span> <span class="n">hsdate</span><span class="p">[</span><span class="n">ptr1</span><span class="p">]</span> <span class="o">==</span> <span class="n">weekdate</span><span class="p">[</span><span class="n">ptr0</span><span class="p">]</span> <span class="ow">and</span> <span class="n">zhongxindate</span><span class="p">[</span><span class="n">ptr2</span><span class="p">]</span> <span class="o">==</span> <span class="n">weekdate</span><span class="p">[</span><span class="n">ptr0</span><span class="p">]:</span>
        <span class="n">datelist</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">hsdate</span><span class="p">[</span><span class="n">ptr1</span><span class="p">])</span>
        <span class="n">ptr0list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">weekarray</span><span class="p">[</span><span class="n">ptr0</span><span class="p">,</span> <span class="mi">3</span><span class="p">])</span>
        <span class="n">ptr1list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">hsarray</span><span class="p">[</span><span class="n">ptr1</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>
        <span class="n">ptr2list</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">zhongxinarray</span><span class="p">[</span><span class="n">ptr2</span><span class="p">,</span> <span class="p">:])</span>
        
        
        
<span class="n">all_data</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">hstack</span><span class="p">((</span><span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">datelist</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">ptr0list</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">ptr1list</span><span class="p">)</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span> <span class="n">np</span><span class="o">.</span><span class="n">stack</span><span class="p">(</span><span class="n">ptr2list</span><span class="p">)))</span>
<span class="n">np</span><span class="o">.</span><span class="n">save</span><span class="p">(</span><span class="s2">&#34;all_data.npy&#34;</span><span class="p">,</span><span class="n">all_data</span><span class="p">)</span>
        
</code></pre></div><p>计算各行业贝塔值</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">all_data</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">load</span><span class="p">(</span><span class="s2">&#34;./all_data.npy&#34;</span><span class="p">,</span> <span class="n">allow_pickle</span><span class="o">=</span><span class="kc">True</span><span class="p">)</span>

<span class="n">dates</span> <span class="o">=</span> <span class="n">all_data</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span>  <span class="c1"># 日期</span>
<span class="n">wind</span> <span class="o">=</span> <span class="n">all_data</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span>  <span class="c1"># 万德全A</span>
<span class="n">hs300</span> <span class="o">=</span> <span class="n">all_data</span><span class="p">[:,</span> <span class="mi">2</span><span class="p">]</span>  <span class="c1"># 沪深300</span>
<span class="n">citic</span> <span class="o">=</span> <span class="n">all_data</span><span class="p">[:,</span> <span class="mi">3</span><span class="p">:]</span>  <span class="c1"># 中信行情</span>

<span class="c1"># 2005-2021年数据 2005-2016年是样本内数据 16-21年是样本外数据</span>
<span class="n">N_beta</span> <span class="o">=</span> <span class="mi">200</span>
<span class="c1"># idx 0-200 2008-2012; idx 500-700 2017-2021</span>
<span class="n">idx_start</span> <span class="o">=</span> <span class="mi">358</span>
<span class="n">idx_end</span> <span class="o">=</span> <span class="mi">800</span> 

<span class="n">data</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">hstack</span><span class="p">((</span><span class="n">hs300</span><span class="o">.</span><span class="n">reshape</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">)</span><span class="o">/</span><span class="mf">100.0</span><span class="p">,</span> <span class="n">citic</span><span class="o">/</span><span class="mf">100.0</span><span class="p">))</span>
<span class="n">data</span> <span class="o">=</span> <span class="n">data</span><span class="o">.</span><span class="n">astype</span><span class="p">(</span><span class="nb">float</span><span class="p">)</span>

<span class="c1"># beta</span>
<span class="n">beta_mat</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">zeros</span><span class="p">((</span><span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="o">-</span> <span class="n">N_beta</span><span class="p">,</span> <span class="n">data</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span> <span class="o">-</span> <span class="mi">1</span><span class="p">))</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="n">beta_mat</span><span class="o">.</span><span class="n">shape</span><span class="p">[</span><span class="mi">0</span><span class="p">]):</span>
    <span class="n">beta</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">array</span><span class="p">(</span><span class="n">np</span><span class="o">.</span><span class="n">cov</span><span class="p">(</span><span class="n">data</span><span class="p">[</span><span class="n">i</span><span class="p">:</span><span class="n">i</span><span class="o">+</span><span class="n">N_beta</span><span class="p">,</span> <span class="p">:]</span><span class="o">.</span><span class="n">T</span><span class="p">)[</span><span class="mi">0</span><span class="p">,:])</span>
    <span class="c1"># beta = np.diag(np.cov(data[i:i+N_beta, :].T))</span>
    <span class="n">beta</span> <span class="o">=</span> <span class="n">beta</span><span class="p">[</span><span class="mi">1</span><span class="p">:]</span> <span class="o">/</span> <span class="n">beta</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span>
    <span class="n">beta_mat</span><span class="p">[</span><span class="n">i</span><span class="p">,</span> <span class="p">:]</span> <span class="o">=</span> <span class="n">beta</span>
</code></pre></div><p>计算spearman秩相关系数</p>
<pre tabindex="0"><code># spearman
ret_mat = data[N_beta-1:, :]
spearman = []
for i in range(beta_mat.shape[0]):
    spearman.append(stats.spearmanr(ret_mat[i+1, 1:] / ret_mat[i, 1:] - 1, beta_mat[i, :])[0])
</code></pre><p>接下来进行回测，2005-2016作为样本内数据，2016-2021作为样本外数据，下面进行样本内外数据的回测（纯多策略和多空策略）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="n">N_beta</span> <span class="o">=</span> <span class="mi">200</span>
<span class="c1"># idx 0-200 2008-2012; idx 500-700 2017-2021</span>
<span class="n">idx_start</span> <span class="o">=</span> <span class="mi">358</span>
<span class="n">idx_end</span> <span class="o">=</span> <span class="mi">800</span> 
<span class="c1"># 从 N_beta 开始可以购买</span>
<span class="n">dates</span> <span class="o">=</span> <span class="n">dates</span><span class="p">[</span><span class="n">N_beta</span><span class="p">:]</span>
<span class="n">hs300</span> <span class="o">=</span> <span class="n">hs300</span><span class="p">[</span><span class="n">N_beta</span><span class="p">:]</span>
<span class="n">wind</span> <span class="o">=</span> <span class="n">wind</span><span class="p">[</span><span class="n">N_beta</span><span class="p">:]</span>

<span class="c1"># 分样本内和样本外,start end 之间</span>
<span class="n">dates</span> <span class="o">=</span> <span class="n">dates</span><span class="p">[</span><span class="n">idx_start</span><span class="p">:</span><span class="n">idx_end</span><span class="p">]</span>
<span class="n">hs300</span> <span class="o">=</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx_start</span><span class="p">:</span><span class="n">idx_end</span><span class="p">]</span>
<span class="n">wind</span> <span class="o">=</span> <span class="n">wind</span><span class="p">[</span><span class="n">idx_start</span><span class="p">:</span><span class="n">idx_end</span><span class="p">]</span>
<span class="n">spearman</span> <span class="o">=</span> <span class="n">spearman</span><span class="p">[</span><span class="n">idx_start</span><span class="p">:</span><span class="n">idx_end</span><span class="p">]</span>

<span class="c1">#以纯多策略进行回测，看多点买入，看空点平仓</span>
<span class="kn">from</span> <span class="nn">utils</span> <span class="kn">import</span> <span class="n">forward_chunduo</span> <span class="k">as</span> <span class="n">forward</span>

<span class="n">cur_res</span> <span class="o">=</span> <span class="n">forward</span><span class="p">(</span><span class="n">hs300</span><span class="p">,</span> <span class="n">spearman</span><span class="p">,</span> <span class="n">threshold</span><span class="o">=</span><span class="mf">0.177</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;最终金额&#39;</span><span class="p">,</span> <span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;money_finale&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;时间&#39;</span><span class="p">,</span> <span class="n">dates</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">dates</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;回报率&#39;</span><span class="p">,</span> <span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;Rp&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;夏普比率&#39;</span><span class="p">,</span> <span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;sharp&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;年华波动率&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;flow&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;交易次数&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;add_times&#39;</span><span class="p">]</span><span class="o">+</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;sub_times&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;win&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;add_times&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;loss&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;sub_times&#39;</span><span class="p">])</span>

<span class="c1">#以多空策略进行回测，看多点先平空单再买入，看空点先平多单再买入</span>
<span class="kn">from</span> <span class="nn">utils</span> <span class="kn">import</span> <span class="n">forward_duokong</span> <span class="k">as</span> <span class="n">forward</span>

<span class="n">cur_res</span> <span class="o">=</span> <span class="n">forward</span><span class="p">(</span><span class="n">hs300</span><span class="p">,</span> <span class="n">spearman</span><span class="p">,</span> <span class="n">threshold</span><span class="o">=</span><span class="mf">0.177</span><span class="p">)</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;最终金额&#39;</span><span class="p">,</span> <span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;money_finale&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;时间&#39;</span><span class="p">,</span> <span class="n">dates</span><span class="p">[</span><span class="mi">0</span><span class="p">],</span> <span class="n">dates</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;回报率&#39;</span><span class="p">,</span> <span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;Rp&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;夏普比率&#39;</span><span class="p">,</span> <span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;sharp&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;年华波动率&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;flow&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;交易次数&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;add_times&#39;</span><span class="p">]</span><span class="o">+</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;sub_times&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;win&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;add_times&#39;</span><span class="p">])</span>
<span class="nb">print</span><span class="p">(</span><span class="s1">&#39;loss&#39;</span><span class="p">,</span><span class="n">cur_res</span><span class="p">[</span><span class="s1">&#39;sub_times&#39;</span><span class="p">])</span>

</code></pre></div><p>回测函数utils.py（纯多与多空策略）</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="nn">np</span>


<span class="s1">&#39;&#39;&#39;纯多策略&#39;&#39;&#39;</span>
<span class="k">def</span> <span class="nf">forward_chunduo</span><span class="p">(</span><span class="n">hs300</span><span class="p">,</span> <span class="n">spearman</span><span class="p">,</span> <span class="n">threshold</span><span class="p">):</span>
    <span class="n">state</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">weeknum</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">idx0</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">idx1</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">money</span> <span class="o">=</span> <span class="mi">1000000</span>
    <span class="n">idxs</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">add_times</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">sub_times</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">num</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">record_money</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">record</span> <span class="o">=</span> <span class="p">[</span><span class="n">money</span><span class="p">]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="nb">len</span><span class="p">(</span><span class="n">spearman</span><span class="p">)):</span>
        <span class="n">record_money</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">money</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">state</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">spearman</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="n">threshold</span><span class="p">:</span>
                <span class="n">idx0</span> <span class="o">=</span> <span class="n">i</span> <span class="c1">#记录买点</span>
                <span class="n">change_state</span><span class="o">=</span><span class="mi">1</span> <span class="c1">#改变仓位信号</span>
                <span class="n">num</span> <span class="o">=</span> <span class="n">money</span><span class="o">//</span><span class="p">(</span><span class="mi">100</span><span class="o">*</span><span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">])</span><span class="o">*</span><span class="mi">100</span> <span class="c1">#记录买卖股数</span>
                <span class="n">cost</span> <span class="o">=</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]</span><span class="o">*</span><span class="n">num</span> <span class="c1">#记录买入金额</span>
        <span class="k">if</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">spearman</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">idx1</span> <span class="o">=</span> <span class="n">i</span>
                <span class="n">profit</span> <span class="o">=</span> <span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">num</span> <span class="c1">#记录卖出金额</span>
                <span class="n">money</span> <span class="o">=</span> <span class="n">money</span><span class="o">-</span><span class="n">cost</span><span class="o">+</span><span class="n">profit</span> <span class="c1">#记录当前金额</span>
                <span class="n">money_last</span> <span class="o">=</span> <span class="n">record</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
                <span class="n">record</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">money</span><span class="p">)</span>
                <span class="n">idxs</span><span class="o">.</span><span class="n">append</span><span class="p">([[</span><span class="n">idx0</span><span class="p">,</span><span class="n">i</span><span class="p">],</span> <span class="p">[</span><span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">],</span><span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]],[</span><span class="n">num</span><span class="p">],[</span><span class="n">money</span><span class="p">],[(</span><span class="n">money</span><span class="o">/</span><span class="n">money_last</span><span class="p">)</span><span class="o">-</span> <span class="mi">1</span><span class="p">]])</span> <span class="c1">#记录交易信息（买卖时间，买入价格，卖出价格,交易了多少股）</span>
                <span class="k">if</span> <span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]:</span>
                    <span class="n">add_times</span> <span class="o">=</span> <span class="n">add_times</span> <span class="o">+</span> <span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">sub_times</span> <span class="o">=</span> <span class="n">sub_times</span> <span class="o">+</span> <span class="mi">1</span>
                <span class="n">change_state</span><span class="o">=</span><span class="mi">1</span>
            <span class="k">if</span> <span class="n">spearman</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="o">-</span><span class="n">threshold</span><span class="p">:</span>
                <span class="n">idx1</span> <span class="o">=</span> <span class="n">i</span>
                <span class="n">profit</span> <span class="o">=</span> <span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]</span><span class="o">*</span><span class="n">num</span> <span class="c1">#记录卖出金额</span>
                <span class="n">money</span> <span class="o">=</span> <span class="n">money</span><span class="o">-</span><span class="n">cost</span><span class="o">+</span><span class="n">profit</span> <span class="c1">#记录当前金额</span>
                <span class="n">money_last</span> <span class="o">=</span> <span class="n">record</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">]</span>
                <span class="n">record</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">money</span><span class="p">)</span>
                <span class="n">idxs</span><span class="o">.</span><span class="n">append</span><span class="p">([[</span><span class="n">idx0</span><span class="p">,</span><span class="n">i</span><span class="p">],</span> <span class="p">[</span><span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">],</span><span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]],[</span><span class="n">num</span><span class="p">],[</span><span class="n">money</span><span class="p">],[(</span><span class="n">money</span><span class="o">/</span><span class="n">money_last</span><span class="p">)</span><span class="o">-</span> <span class="mi">1</span><span class="p">]])</span> <span class="c1">#记录交易信息（买卖时间，买入价格，卖出价格,交易了多少股）</span>

                <span class="k">if</span> <span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]:</span>
                    <span class="n">add_times</span> <span class="o">=</span> <span class="n">add_times</span> <span class="o">+</span> <span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">sub_times</span> <span class="o">=</span> <span class="n">sub_times</span> <span class="o">+</span> <span class="mi">1</span>
                <span class="n">change_state</span><span class="o">=</span><span class="mi">1</span>
            <span class="n">weeknum</span> <span class="o">=</span> <span class="n">weeknum</span> <span class="o">+</span> <span class="mi">1</span>
        <span class="k">if</span> <span class="n">change_state</span><span class="p">:</span>
            <span class="n">change_state</span><span class="o">=</span><span class="mi">0</span>
            <span class="n">state</span> <span class="o">=</span> <span class="o">-</span><span class="n">state</span>

    <span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>


    <span class="n">money_finale</span> <span class="o">=</span> <span class="n">money</span>  <span class="c1"># 最终金额</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;money_finale&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">money_finale</span>

    <span class="n">Rp</span> <span class="o">=</span> <span class="p">(</span><span class="n">money_finale</span> <span class="o">/</span> <span class="mi">1000000</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="mi">1</span> <span class="o">/</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">spearman</span><span class="p">)</span><span class="o">/</span><span class="mi">52</span><span class="p">))</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;Rp&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">Rp</span>  <span class="c1"># 年化收益率</span>

    <span class="n">k</span> <span class="o">=</span> <span class="mi">4</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">record_money</span><span class="p">)</span> <span class="o">//</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
        <span class="n">ratio</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">record_money</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">k</span><span class="o">+</span><span class="n">k</span><span class="p">]</span> <span class="o">/</span> <span class="n">record_money</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">k</span><span class="p">])</span>
    <span class="n">flow</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">ratio</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">12</span><span class="o">**</span><span class="mf">0.5</span><span class="p">)</span>  <span class="c1"># 年化波动率</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;flow&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">flow</span>

    <span class="n">sharp</span> <span class="o">=</span> <span class="n">Rp</span> <span class="o">/</span> <span class="n">flow</span>  <span class="c1"># 夏普比率</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;sharp&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">sharp</span>

    <span class="c1"># res[&#39;record&#39;] = record</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;record_money&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">record_money</span>

    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;add_times&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">add_times</span>

    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;sub_times&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">sub_times</span>

    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;record_idxs&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">idxs</span>
    <span class="k">return</span> <span class="n">res</span> 


<span class="s1">&#39;&#39;&#39;多空策略_hs300&#39;&#39;&#39;</span>

<span class="k">def</span> <span class="nf">forward_duokong</span><span class="p">(</span><span class="n">hs300</span><span class="p">,</span> <span class="n">spearman</span><span class="p">,</span> <span class="n">threshold</span><span class="p">):</span>

    <span class="c1"># 模拟购买</span>
    <span class="n">state</span> <span class="o">=</span> <span class="mi">0</span>  <span class="c1"># 0代表空仓，1代表有多单未平，-1代表有空单未平</span>
    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="n">idx0</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">idx1</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">money</span> <span class="o">=</span> <span class="mi">1000000</span>

    <span class="n">add_times</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">sub_times</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="n">record</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">record_money</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">num_duo</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="n">num_kong</span> <span class="o">=</span> <span class="mi">0</span>

    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">spearman</span><span class="p">)):</span>
        <span class="n">record_money</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">money</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">spearman</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;=</span> <span class="n">threshold</span><span class="p">:</span>  <span class="c1"># 看多信号</span>
            <span class="k">if</span> <span class="n">state</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="ow">or</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># 如果 有空单未平或者空仓</span>
                <span class="n">idx0</span> <span class="o">=</span> <span class="n">i</span>  <span class="c1"># 记录买点</span>
                <span class="n">change_state</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1"># 改变仓位信号</span>
                <span class="k">if</span> <span class="n">num_kong</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                    <span class="n">num_duo</span> <span class="o">=</span> <span class="n">money</span> <span class="o">//</span> <span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">])</span> <span class="o">*</span> <span class="mi">100</span>  <span class="c1"># 记录买卖股数</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">money</span> <span class="o">=</span> <span class="n">money</span> <span class="o">-</span> <span class="n">num_kong</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]</span> <span class="o">+</span> <span class="n">num_kong</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">]</span>  <span class="c1"># 平空单后的金额</span>
                    <span class="k">if</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">]:</span>
                        <span class="n">record</span><span class="o">.</span><span class="n">append</span><span class="p">([[</span><span class="n">money</span><span class="p">],</span> <span class="p">[</span><span class="n">idx1</span><span class="p">,</span> <span class="n">idx0</span><span class="p">],</span> <span class="p">[</span><span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">],</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]],</span> <span class="p">[</span><span class="s1">&#39;平空胜，做多&#39;</span><span class="p">]])</span>
                        <span class="n">add_times</span> <span class="o">=</span> <span class="n">add_times</span> <span class="o">+</span> <span class="mi">1</span>
                    <span class="k">else</span><span class="p">:</span>
                        <span class="n">record</span><span class="o">.</span><span class="n">append</span><span class="p">([[</span><span class="n">money</span><span class="p">],</span> <span class="p">[</span><span class="n">idx1</span><span class="p">,</span> <span class="n">idx0</span><span class="p">],</span> <span class="p">[</span><span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">],</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]],</span> <span class="p">[</span><span class="s1">&#39;平空负，做多&#39;</span><span class="p">]])</span>
                        <span class="n">sub_times</span> <span class="o">=</span> <span class="n">sub_times</span> <span class="o">+</span> <span class="mi">1</span>
                    <span class="n">num_kong</span> <span class="o">=</span> <span class="mi">0</span>
                    <span class="n">num_duo</span> <span class="o">=</span> <span class="n">money</span> <span class="o">//</span> <span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">])</span> <span class="o">*</span> <span class="mi">100</span>  <span class="c1"># 看多买入股数</span>

                <span class="k">if</span> <span class="n">change_state</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># 改变信号 且空仓  改为多单信号</span>
                    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>
                    <span class="n">state</span> <span class="o">=</span> <span class="mi">1</span>
                <span class="k">elif</span> <span class="n">change_state</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="ow">and</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># 改变信号 且空仓  改为空单信号</span>
                    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>
                    <span class="n">state</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>  <span class="c1"># 改变信号 多变空 空变多</span>
                    <span class="n">state</span> <span class="o">=</span> <span class="o">-</span><span class="n">state</span>

        <span class="k">if</span> <span class="n">spearman</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="o">-</span><span class="n">threshold</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">or</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># 如果有多单未平或空仓</span>
                <span class="n">idx1</span> <span class="o">=</span> <span class="n">i</span>
                <span class="n">change_state</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>  <span class="c1"># 改变仓位信号</span>
                <span class="k">if</span> <span class="n">num_duo</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
                    <span class="n">num_kong</span> <span class="o">=</span> <span class="n">money</span> <span class="o">//</span> <span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">])</span> <span class="o">*</span> <span class="mi">100</span>  <span class="c1"># 记录买卖股数</span>

                <span class="k">else</span><span class="p">:</span>
                    <span class="n">money</span> <span class="o">=</span> <span class="n">money</span> <span class="o">+</span> <span class="n">num_duo</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">]</span> <span class="o">-</span> <span class="n">num_duo</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]</span>  <span class="c1"># 平多单后的金额</span>
                    <span class="k">if</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">]</span> <span class="o">&lt;</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">]:</span>
                        <span class="n">record</span><span class="o">.</span><span class="n">append</span><span class="p">([[</span><span class="n">money</span><span class="p">],</span> <span class="p">[</span><span class="n">idx0</span><span class="p">,</span> <span class="n">idx1</span><span class="p">],</span> <span class="p">[</span><span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">],</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">]],</span> <span class="p">[</span><span class="s1">&#39;平多胜，做空&#39;</span><span class="p">]])</span>
                        <span class="n">add_times</span> <span class="o">=</span> <span class="n">add_times</span> <span class="o">+</span> <span class="mi">1</span>
                    <span class="k">else</span><span class="p">:</span>
                        <span class="n">record</span><span class="o">.</span><span class="n">append</span><span class="p">([[</span><span class="n">money</span><span class="p">],</span> <span class="p">[</span><span class="n">idx0</span><span class="p">,</span> <span class="n">idx1</span><span class="p">],</span> <span class="p">[</span><span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">],</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx1</span><span class="p">]],</span> <span class="p">[</span><span class="s1">&#39;平多负，做空&#39;</span><span class="p">]])</span>
                        <span class="n">sub_times</span> <span class="o">=</span> <span class="n">sub_times</span> <span class="o">+</span> <span class="mi">1</span>
                    <span class="n">num_duo</span> <span class="o">=</span> <span class="mi">0</span>
                    <span class="n">num_kong</span> <span class="o">=</span> <span class="n">money</span> <span class="o">//</span> <span class="p">(</span><span class="mi">100</span> <span class="o">*</span> <span class="n">hs300</span><span class="p">[</span><span class="n">idx0</span><span class="p">])</span> <span class="o">*</span> <span class="mi">100</span>  <span class="c1"># 看空借入股数</span>

                <span class="k">if</span> <span class="n">change_state</span> <span class="o">==</span> <span class="mi">1</span> <span class="ow">and</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># 改变信号 且空仓  改为多单信号</span>
                    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>
                    <span class="n">state</span> <span class="o">=</span> <span class="mi">1</span>
                <span class="k">elif</span> <span class="n">change_state</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span> <span class="ow">and</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>  <span class="c1"># 改变信号 且空仓  改为空单信号</span>
                    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>
                    <span class="n">state</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
                <span class="k">else</span><span class="p">:</span>
                    <span class="n">change_state</span> <span class="o">=</span> <span class="mi">0</span>  <span class="c1"># 改变信号 多变空 空变多</span>
                    <span class="n">state</span> <span class="o">=</span> <span class="o">-</span><span class="n">state</span>
        <span class="k">if</span> <span class="n">i</span> <span class="o">==</span> <span class="nb">len</span><span class="p">(</span><span class="n">spearman</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">state</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
                <span class="n">money</span> <span class="o">=</span> <span class="n">money</span> <span class="o">+</span> <span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">num_duo</span>
            <span class="k">else</span><span class="p">:</span>
                <span class="n">money</span> <span class="o">=</span> <span class="n">money</span> <span class="o">+</span> <span class="n">hs300</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">*</span> <span class="n">num_kong</span>

    <span class="n">res</span> <span class="o">=</span> <span class="p">{}</span>
    
    <span class="n">money_finale</span> <span class="o">=</span> <span class="n">record</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span>  <span class="c1"># 最终金额</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;money_finale&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">money_finale</span>

    <span class="n">Rp</span> <span class="o">=</span> <span class="p">(</span><span class="n">record</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">0</span><span class="p">][</span><span class="mi">0</span><span class="p">]</span> <span class="o">/</span> <span class="mi">1000000</span><span class="p">)</span> <span class="o">**</span> <span class="p">(</span><span class="mi">1</span> <span class="o">/</span> <span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">spearman</span><span class="p">)</span><span class="o">/</span><span class="mi">52</span><span class="p">))</span> <span class="o">-</span> <span class="mi">1</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;Rp&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">Rp</span>  <span class="c1"># 年化收益率</span>

    <span class="n">k</span> <span class="o">=</span> <span class="mi">4</span>
    <span class="n">ratio</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nb">range</span><span class="p">(</span><span class="nb">len</span><span class="p">(</span><span class="n">record_money</span><span class="p">)</span> <span class="o">//</span> <span class="n">k</span> <span class="o">-</span> <span class="mi">1</span><span class="p">):</span>
        <span class="n">ratio</span><span class="o">.</span><span class="n">append</span><span class="p">(</span><span class="n">record_money</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">k</span><span class="o">+</span><span class="n">k</span><span class="p">]</span> <span class="o">/</span> <span class="n">record_money</span><span class="p">[</span><span class="n">i</span><span class="o">*</span><span class="n">k</span><span class="p">])</span>
    <span class="n">flow</span> <span class="o">=</span> <span class="n">np</span><span class="o">.</span><span class="n">std</span><span class="p">(</span><span class="n">ratio</span><span class="p">)</span><span class="o">*</span><span class="p">(</span><span class="mi">12</span><span class="o">**</span><span class="mf">0.5</span><span class="p">)</span>  <span class="c1"># 年化波动率</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;flow&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">flow</span>

    <span class="n">sharp</span> <span class="o">=</span> <span class="n">Rp</span> <span class="o">/</span> <span class="n">flow</span>  <span class="c1"># 夏普比率</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;sharp&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">sharp</span>

    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;record&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">record</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;record_money&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">record_money</span>
    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;add_times&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">add_times</span>

    <span class="n">res</span><span class="p">[</span><span class="s1">&#39;sub_times&#39;</span><span class="p">]</span> <span class="o">=</span> <span class="n">sub_times</span>

    <span class="k">return</span> <span class="n">res</span>
</code></pre></div><p>其他的结果包括一些表格、图片、数据与结论可以在Github地址中查看(Project Report)。</p>
]]></content>
		</item>
		
		<item>
			<title>博客搭建与部署指南</title>
			<link>https://2318454078.github.io/posts/guide_git/</link>
			<pubDate>Sat, 22 Jan 2022 13:44:37 +0800</pubDate>
			
			<guid>https://2318454078.github.io/posts/guide_git/</guid>
			<description>1.博客搭建 下载Hugo: Releases · gohugoio/hugo (github.com) 解压到 D:\Hugo\bin 目录下，并设置好环境变量 打开命令行验证是否安装完成 hugo version 选择一个目录新建网站站点 cd github hugo new site myblog 在官方网</description>
			<content type="html"><![CDATA[<h2 id="1博客搭建">1.博客搭建</h2>
<p>下载Hugo: <a href="https://github.com/gohugoio/hugo/releases">Releases · gohugoio/hugo (github.com)</a></p>
<p>解压到 D:\Hugo\bin 目录下，并设置好环境变量</p>
<p>打开命令行验证是否安装完成</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">hugo version
</code></pre></div><p>选择一个目录新建网站站点</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash"><span class="nb">cd</span> github
hugo new site myblog
</code></pre></div><p>在官方网站选择一个喜欢的主题（Hermit）<a href="https://themes.gohugo.io/">Complete List | Hugo Themes (gohugo.io)</a></p>
<p>在网站目录下通过git进行下载</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">$ git init
$ git clone https://github.com/Track3/hermit.git themes/hermit
</code></pre></div><p>并在 config.toml 文件内进行网站基本属性的配置，</p>
<h2 id="2博客部署">2.博客部署</h2>
<p>博客更新完成后，在public文件夹中build渲染文件</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">hugo --theme<span class="o">=</span>hermit --baseUrl<span class="o">=</span><span class="s2">&#34;https://2318454078.github.io/&#34;</span> --buildDrafts <span class="c1">#你的仓库地址</span>
</code></pre></div><p>将文件加入git，提交并推送至git仓库</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-bash" data-lang="bash">git add .
git commit -a -n <span class="s2">&#34;xxx&#34;</span> <span class="c1">#username</span>
git remote add origin https://github.com/2318454078/2318454078.github.io.git <span class="c1">#你的仓库地址</span>
git push -u origin master
</code></pre></div><h2 id="heading"></h2>
]]></content>
		</item>
		
	</channel>
</rss>
